C51 COMPILER V9.52.0.0   PWM                                                               09/19/2017 16:08:29 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN .\Output\PWM.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Code\N76E003_HW\PWM.c OPTIMIZE(4,SPEED) BROWSE INCDIR(.\Code\Common;.\Co
                    -de;.\Code\BSP;.\Code\N76E003_HW) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\PWM.lst) TABS(2) OBJECT(.\Output\PWM
                    -.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2017 Buta Technology Corp. All rights reserved.                                         */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Website: http://www.ptahtoy.com
   9          //  E-Mail : linshigao@ptahtoy.com
  10          //  Date   : Jun/24/2017
  11          //********************************************************************************************************
             -***
  12          
  13          //********************************************************************************************************
             -***
  14          //  File Function: BabyMonkey(Finger Toy) 
  15          //********************************************************************************************************
             -***
  16          #include "N76E003.h"
  17          #include "SFR_Macro.h"
  18          #include "Function_define.h"
  19          #include "Common.h"
  20          #include "PWM.h"
  21          #include "motor.h"
  22          
  23          //bit BIT_TMP;
  24          bit BIT_TMP;
  25          //****SFRS    91H ****
  26          #define set_SFRPAGE  BIT_TMP=EA;EA=0;TA=0xAA;TA=0x55;SFRS|=SET_BIT0;EA=BIT_TMP
  27          #define clr_SFRPAGE  BIT_TMP=EA;EA=0;TA=0xAA;TA=0x55;SFRS&=~SET_BIT0;EA=BIT_TMP
  28          
  29          /*
  30            PWM初始化
  31            左电机 ： PWM1 + PWM4
  32            右电机 ： PWM3 + PWM0
  33          */
  34          void PWM_Init(void)
  35          {
  36   1       
  37   1        P12_PushPull_Mode;//PWM0
  38   1        P11_PushPull_Mode;//PWM1
  39   1        
  40   1        //P10_PushPull_Mode;//PWM2
  41   1        P00_PushPull_Mode;//PWM3
  42   1        
  43   1        P01_PushPull_Mode;//PWM4
  44   1        //P03_PushPull_Mode;//PWM5
  45   1        
C51 COMPILER V9.52.0.0   PWM                                                               09/19/2017 16:08:29 PAGE 2   

  46   1        P12=0;P11=0;/*P10=0;*/P00=0;P01=0;/*P03=0;*/
  47   1        
  48   1      //  PWM0_P12_OUTPUT_DISABLE;
  49   1      //  PWM1_P11_OUTPUT_DISABLE;
  50   1      //  
  51   1      //  PWM2_P10_OUTPUT_DISABLE;
  52   1      //  PWM3_P00_OUTPUT_DISABLE;
  53   1      //  
  54   1      //  PWM4_P01_OUTPUT_DISABLE;
  55   1      //  PWM5_P03_OUTPUT_DISABLE;
  56   1      
  57   1        PWM_IMDEPENDENT_MODE;
  58   1        PWM_CLOCK_FSYS;// selecte sysclk=16MHz as the input clock
  59   1        PWM_CLOCK_DIV_128;// pwm clock=16/16=1MHz
  60   1        PWMPH = 0x00;
  61   1        PWMPL = (0x7E + MOTOR_PWM_DIF);//
  62   1        /**********************************************************************
  63   1        PWM frequency = Fpwm/((PWMPH,PWMPL) + 1) <Fpwm = Fsys/PWM_CLOCK_DIV> 
  64   1                  = (16MHz/8)/(0x063 + 1)
  65   1                  = 20KHz  
  66   1        ***********************************************************************/
  67   1      
  68   1        //-------- PWM start run--------------
  69   1        set_LOAD;
  70   1        set_PWMRUN;
  71   1        
  72   1        PWM0_P12_OUTPUT_ENABLE;
  73   1        PWM1_P11_OUTPUT_ENABLE;
  74   1        
  75   1        //PWM2_P10_OUTPUT_ENABLE;
  76   1        PWM3_P00_OUTPUT_ENABLE;
  77   1        
  78   1        PWM4_P01_OUTPUT_ENABLE;
  79   1        //PWM5_P03_OUTPUT_ENABLE;
  80   1      }
  81          
  82          void SetPWM_Start(void)
  83          {
  84   1        PWM0_P12_OUTPUT_ENABLE;
  85   1        PWM1_P11_OUTPUT_ENABLE;
  86   1        
  87   1        //PWM2_P10_OUTPUT_ENABLE;
  88   1        PWM3_P00_OUTPUT_ENABLE;
  89   1        
  90   1        PWM4_P01_OUTPUT_ENABLE;
  91   1        //PWM5_P03_OUTPUT_ENABLE;
  92   1        
  93   1        set_PWMRUN;
  94   1      }
  95          
  96          void SetPWM_Stop(void)
  97          {
  98   1        clr_PWMRUN;
  99   1      
 100   1        PWM0_P12_OUTPUT_DISABLE;
 101   1        PWM1_P11_OUTPUT_DISABLE;
 102   1        
 103   1        PWM2_P10_OUTPUT_DISABLE;
 104   1        PWM3_P00_OUTPUT_DISABLE;
 105   1        
 106   1        PWM4_P01_OUTPUT_DISABLE;
 107   1        PWM5_P03_OUTPUT_DISABLE;
C51 COMPILER V9.52.0.0   PWM                                                               09/19/2017 16:08:29 PAGE 3   

 108   1      
 109   1        P12=0;P11=0; P00=0;P01=0; 
 110   1        
 111   1      //  SetPWM(1 , 0);
 112   1      //  SetPWM(4 , 0);
 113   1      //  SetPWM(3 , 0);
 114   1      //  SetPWM(0 , 0);
 115   1      }
 116          
 117          void SetPWM(UINT8 chn,UINT8 val)
 118          {
 119   1        switch(chn)
 120   1        {
 121   2          case 0:
 122   2            PWM0H = 0x00;         
 123   2            PWM0L = val;
 124   2            set_LOAD;
 125   2          break;
 126   2          case 1:
 127   2            PWM1H = 0x00;         
 128   2            PWM1L = val;
 129   2            set_LOAD;
 130   2          break;
 131   2          case 2:
 132   2            PWM2H = 0x00;         
 133   2            PWM2L = val;
 134   2            set_LOAD;
 135   2          break;
 136   2          case 3:
 137   2            PWM3H = 0x00;         
 138   2            PWM3L = val;
 139   2            set_LOAD;
 140   2          break;
 141   2          case 4:
 142   2            set_SFRPAGE;
 143   2            PWM4H = 0x00;         
 144   2            PWM4L = val;
 145   2            clr_SFRPAGE;
 146   2            set_LOAD;
 147   2          break;
 148   2          case 5:
 149   2            set_SFRPAGE;
 150   2            PWM5H = 0x00;         
 151   2            PWM5L = val;
 152   2            clr_SFRPAGE;
 153   2            set_LOAD;
 154   2          break;
 155   2        }
 156   1      }
 157           
 158          void PWMEnable(UINT8 chn)
 159          {
 160   1        if(chn==0)
 161   1        {
 162   2          PWM0_P12_OUTPUT_ENABLE;
 163   2        }
 164   1        else if(chn==1)
 165   1        {
 166   2          PWM1_P11_OUTPUT_ENABLE;
 167   2        }
 168   1      }
 169          
C51 COMPILER V9.52.0.0   PWM                                                               09/19/2017 16:08:29 PAGE 4   

 170          void PWMDisable(UINT8 chn)
 171          {
 172   1        if(chn==0)
 173   1        {
 174   2          PWM0_P12_OUTPUT_DISABLE;
 175   2          P12=1;
 176   2        }
 177   1        else if(chn==1)
 178   1        {
 179   2          PWM1_P11_OUTPUT_DISABLE;
 180   2          P11=1;
 181   2        }
 182   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    286    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
