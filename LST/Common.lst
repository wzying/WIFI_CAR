C51 COMPILER V9.52.0.0   COMMON                                                            09/15/2017 16:15:37 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE COMMON
OBJECT MODULE PLACED IN .\Output\Common.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Code\Common\Common.c OPTIMIZE(4,SPEED) BROWSE INCDIR(.\Code\Common;.\Cod
                    -e;.\Code\BSP;.\Code\N76E003_HW) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\Common.lst) TABS(2) OBJECT(.\Output\C
                    -ommon.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2017 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Website: http://www.nuvoton.com
   9          //  E-Mail : MicroC-8bit@nuvoton.com
  10          //  Date   : Jan/21/2017
  11          //********************************************************************************************************
             -***
  12          #include "N76E003.h"
  13          #include "Common.h"
  14          #include "Delay.h"
  15          #include "SFR_Macro.h"
  16          #include "Function_define.h"
  17          
  18          //----------------------------------------------------------------------------------
  19          //  enable the global interrupt switcher 
  20          //----------------------------------------------------------------------------------
  21          void GlobalInterruptEnable(void)
  22          {
  23   1        EA=1;
  24   1      }
  25          
  26          void DisableInterrupts(void)
  27          {
  28   1        EA=0;
  29   1      }
  30          ////----------------------------------------------------------------------------------
  31          //// UART0 baud rate initial setting 
  32          ////----------------------------------------------------------------------------------
  33          void InitialUART0_Timer1(UINT32 u32Baudrate)    //T1M = 1, SMOD = 1
  34          {
  35   1          P06_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  36   1          P07_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  37   1        
  38   1          SCON = 0x50;      //UART0 Mode1,REN=1,TI=1
  39   1          TMOD |= 0x20;     //Timer1 Mode1
  40   1          
  41   1          set_SMOD;         //UART0 Double Rate Enable
  42   1          set_T1M;
  43   1          clr_BRCK;         //Serial port 0 baud rate clock source = Timer1
  44   1       
  45   1      #ifdef FOSC_160000
  46   1          TH1 = 256 - (1000000/u32Baudrate+1);               /*16 MHz */
C51 COMPILER V9.52.0.0   COMMON                                                            09/15/2017 16:15:37 PAGE 2   

  47   1      #endif      
  48   1      #ifdef FOSC_166000
                  TH1 = 256 - (1037500/u32Baudrate);                 /*16.6 MHz */
              #endif
  51   1          set_TR1;
  52   1          set_TI;           //For printf function must setting TI = 1
  53   1        
  54   1          set_ES;         //For interrupt enable
  55   1      }
  56          
  57          ////---------------------------------------------------------------
  58          //void InitialUART0_Timer3(UINT32 u32Baudrate) //use timer3 as Baudrate generator
  59          //{
  60          //    P06_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  61          //    P07_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit 
  62          //  
  63          //    SCON = 0x50;     //UART0 Mode1,REN=1,TI=1
  64          //    set_SMOD;        //UART0 Double Rate Enable
  65          //    T3CON &= 0xF8;   //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
  66          //    set_BRCK;        //UART0 baud rate clock source = Timer3
  67          
  68          //#ifdef FOSC_160000
  69          //    RH3    = HIBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
  70          //    RL3    = LOBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
  71          //#endif
  72          //#ifdef FOSC_166000
  73          //    RH3    = HIBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
  74          //    RL3    = LOBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
  75          //#endif
  76          //    set_TR3;         //Trigger Timer3
  77          //    set_TI;          //For printf function must setting TI = 1
  78          //  
  79          //    set_ES;         //For interrupt enable
  80          //}
  81          
  82          UINT8 Receive_Data_From_UART0(void)
  83          {
  84   1          UINT8 c;
  85   1          while (!RI);
  86   1          c = SBUF;
  87   1          RI = 0;
  88   1          return (c);
  89   1      }
  90          
  91          void Send_Data_To_UART0 (UINT8 c)
  92          {
  93   1          TI = 0;
  94   1          SBUF = c;
  95   1          while(TI==0);
  96   1      }
  97          
  98          void SendDataUart(uint8_t *buf,uint8_t len)
  99          {
 100   1        while(len--)
 101   1        {
 102   2          Send_Data_To_UART0(*buf);
 103   2          buf++;
 104   2        }
 105   1      }
 106          
 107          void MyPrintf(uint8_t *buf)
 108          {
C51 COMPILER V9.52.0.0   COMMON                                                            09/15/2017 16:15:37 PAGE 3   

 109   1        while(*buf != NULL)
 110   1        {
 111   2          Send_Data_To_UART0(*buf);
 112   2          buf++;
 113   2        }
 114   1      }
 115          
 116          
 117          ////----------------------------------------------------------------------------------
 118          //// UART1 baud rate initial setting 
 119          ////----------------------------------------------------------------------------------
 120          //void InitialUART1_Timer3(UINT32 u32Baudrate) //use timer3 as Baudrate generator
 121          //{
 122          //    P02_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
 123          //    P16_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
 124          //  
 125          //    SCON_1 = 0x50;    //UART1 Mode1,REN_1=1,TI_1=1
 126          //    T3CON = 0x08;     //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1), UART1 in MODE 1
 127          //    clr_BRCK;
 128          //  
 129          //#ifdef FOSC_160000
 130          //    RH3    = HIBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
 131          //    RL3    = LOBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
 132          //#endif
 133          //#ifdef FOSC_166000
 134          //    RH3    = HIBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
 135          //    RL3    = LOBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
 136          //#endif
 137          //    set_TR3;         //Trigger Timer3
 138          //}
 139          
 140          //UINT8 Receive_Data_From_UART1(void)
 141          //{
 142          //    UINT8 c;
 143          //    
 144          //    while (!RI_1);
 145          //    c = SBUF_1;
 146          //    RI_1 = 0;
 147          //    return (c);
 148          //}
 149          
 150          //void Send_Data_To_UART1 (UINT8 c)
 151          //{
 152          //    TI_1 = 0;
 153          //    SBUF_1 = c;
 154          //    while(TI_1==0);
 155          //}
 156          
 157          
 158          
 159          /*==========================================================================*/
 160          #ifdef SW_Reset
              void SW_Reset(void)
              {
                  TA = 0xAA;
                  TA = 0x55;
                  set_SWRST;
              }
              #endif
 168          /*==========================================================================*/


C51 COMPILER V9.52.0.0   COMMON                                                            09/15/2017 16:15:37 PAGE 4   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    126    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
