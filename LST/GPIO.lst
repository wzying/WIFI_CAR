C51 COMPILER V9.52.0.0   GPIO                                                              11/20/2017 10:39:42 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\Output\GPIO.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Code\N76E003_HW\GPIO.c OPTIMIZE(4,SPEED) BROWSE INCDIR(.\Code\Common;.\C
                    -ode;.\Code\BSP;.\Code\N76E003_HW) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\GPIO.lst) TABS(2) OBJECT(.\Output\G
                    -PIO.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2017 Buta Technology Corp. All rights reserved.                                         */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Website: http://www.ptahtoy.com
   9          //  E-Mail : linshigao@ptahtoy.com
  10          //  Date   : Jun/24/2017
  11          //********************************************************************************************************
             -***
  12          
  13          //********************************************************************************************************
             -***
  14          //  File Function: BabyMonkey(Finger Toy) 
  15          //********************************************************************************************************
             -***
  16          #include "N76E003.h"
  17          #include "SFR_Macro.h"
  18          #include "Function_define.h"
  19          #include "Common.h"
  20          #include "GPIO.h"
  21          
  22          FN_INT_HANDLER mGPIOIntHandler4=0; // Px4 channel interrupt
  23          FN_INT_HANDLER mGPIOIntHandler5=0; // Px5 channel interrupt
  24          FN_INT_HANDLER mGPIOIntHandler6=0; // Px6 channel interrupt
  25          FN_INT_HANDLER mEX0IntHandler=0;
  26          FN_INT_HANDLER mEX1IntHandler=0;
  27          /*
  28          GPIO initialization
  29          */
  30          void GPIO_Init(void)
  31          {
  32   1        /*
  33   1          机械臂
  34   1          P1.4 + P1.3
  35   1        */
  36   1        P14_PushPull_Mode;
  37   1        P14=0;
  38   1        P13_PushPull_Mode;
  39   1        P13=0;  
  40   1        
  41   1        /*
  42   1          前爪
  43   1          P1.0 + P0.3
  44   1        */
  45   1        P10_PushPull_Mode;
C51 COMPILER V9.52.0.0   GPIO                                                              11/20/2017 10:39:42 PAGE 2   

  46   1        P10=0;  
  47   1        P03_PushPull_Mode;
  48   1        P03=0;  
  49   1        
  50   1        /*
  51   1          电池组检测
  52   1          P1.5
  53   1        */
  54   1        P15_Quasi_Mode;
  55   1      }
  56          
  57           
  58          UINT8 GetPort0Val(UINT8 pin)
  59          {
  60   1        UINT8 ret;
  61   1        
  62   1        switch(pin)
  63   1        {
  64   2          case 0:
  65   2            ret=P00;
  66   2          break;
  67   2          case 1:
  68   2            ret=P01;
  69   2          break;
  70   2          case 2:
  71   2            ret=P02;
  72   2          break;
  73   2          case 3:
  74   2            ret=P03;
  75   2          break;
  76   2          case 4:
  77   2            ret=P04;
  78   2          break;
  79   2          case 5:
  80   2            ret=P05;
  81   2          break;
  82   2          case 6:
  83   2            ret=P06;
  84   2          break;
  85   2          case 7:
  86   2            ret=P07;
  87   2          break;
  88   2        }
  89   1        
  90   1        return ret;
  91   1        
  92   1      }
  93          UINT8 GetPort1Val(UINT8 pin)
  94          {
  95   1        UINT8 ret;
  96   1        
  97   1        switch(pin)
  98   1        {
  99   2          case 0:
 100   2            ret=P10;
 101   2          break;
 102   2          case 1:
 103   2            ret=P11;
 104   2          break;
 105   2          case 2:
 106   2            ret=P12;
 107   2          break;
C51 COMPILER V9.52.0.0   GPIO                                                              11/20/2017 10:39:42 PAGE 3   

 108   2          case 3:
 109   2            ret=P13;
 110   2          break;
 111   2          case 4:
 112   2            ret=P14;
 113   2          break;
 114   2          case 5:
 115   2            ret=P15;
 116   2          break;
 117   2          case 6:
 118   2            ret=P16;
 119   2          break;
 120   2          case 7:
 121   2            ret=P17;
 122   2          break;
 123   2        }
 124   1        
 125   1        return ret;
 126   1        
 127   1      }
 128          UINT8 GetPort3Val(UINT8 pin)
 129          {
 130   1        UINT8 ret;
 131   1        
 132   1        ret=0;
 133   1        
 134   1        switch(pin)
 135   1        {
 136   2          case 0:
 137   2            ret=P30;
 138   2          break;
 139   2           
 140   2        }
 141   1        
 142   1        return ret;
 143   1        
 144   1      }
 145          
 146          
 147          void  SetPort2Val(UINT8 pin,UINT8 val)
 148          {
 149   1        switch(pin)
 150   1        {
 151   2          case 0:
 152   2            P20=val;
 153   2          break;
 154   2           
 155   2        }
 156   1        
 157   1      
 158   1      }
 159          
 160          
 161          
 162          void SetGPx0IntHandler(FN_INT_HANDLER fn)
 163          {
 164   1        mGPIOIntHandler4=fn;
 165   1      }
 166          
 167          void SetGPx5IntHandler(FN_INT_HANDLER fn)
 168          {
 169   1        mGPIOIntHandler5=fn;
C51 COMPILER V9.52.0.0   GPIO                                                              11/20/2017 10:39:42 PAGE 4   

 170   1      }
 171          
 172          void SetGPx6IntHandler(FN_INT_HANDLER fn)
 173          {
 174   1        mGPIOIntHandler6=fn;
 175   1      }
 176          
 177          void SetEX0IntHandler(FN_INT_HANDLER fn)
 178          {
 179   1        mEX0IntHandler=fn;
 180   1      }
 181          
 182          void SetEX1IntHandler(FN_INT_HANDLER fn)
 183          {
 184   1        mEX1IntHandler=fn;
 185   1      }
 186          /*
 187          toggle the P07(IR output signal)
 188          */
 189          //void ToggleIROut(void)
 190          //{
 191          //  P01=~P01;
 192          //}
 193          
 194          //void ToggleIROut_test(void)
 195          //{
 196          //  P00=~P00;
 197          //}
 198          
 199          //void SetIR_Pin(UINT8 sta)
 200          //{
 201          //  P01=sta;
 202          //}
 203          
 204          //void SetIR_Pin_test(UINT8 sta)
 205          //{
 206          //  P00=sta;
 207          //}
 208          
 209          //UINT8 GetTouch_Head(void)
 210          //{
 211          //  return P15;
 212          //}
 213          
 214          //UINT8 GetTouch_HeadRight(void)
 215          //{
 216          //  return P13;
 217          //}
 218          
 219          //UINT8 GetP05Val(void)
 220          //{
 221          //  return P05;
 222          //}
 223          
 224          //UINT8 GetP06Val(void)
 225          //{
 226          //  return P06;
 227          //}
 228          
 229          //UINT8 GetP02Val(void)
 230          //{
 231          //  return P02;
C51 COMPILER V9.52.0.0   GPIO                                                              11/20/2017 10:39:42 PAGE 5   

 232          //}
 233          
 234          //void SetP14(UINT8 sta)
 235          //{
 236          //  P14=sta;
 237          //}
 238          // 
 239          //UINT8 GetP13Val(void)
 240          //{
 241          //  return P13;
 242          //}
 243          
 244          //UINT8 GetP15Val(void)
 245          //{
 246          //  return P15;
 247          //}
 248          /*
 249          Pin Interrupt handler 
 250          */
 251          void PinInterrupt_ISR (void) interrupt 7
 252          {
 253   1        UINT8 flg;
 254   1        
 255   1        flg=PIF;
 256   1        if((flg &0x10) == 0x10)
 257   1        {//P04 interrupt
 258   2          if(mGPIOIntHandler4)
 259   2          {
 260   3            mGPIOIntHandler4();
 261   3          }
 262   2        }
 263   1        else if((flg &0x20) == 0x20)
 264   1        {//P05 interrupt
 265   2          if(mGPIOIntHandler5)
 266   2          {
 267   3            mGPIOIntHandler5();
 268   3          }
 269   2        }
 270   1        else if((flg &0x40) == 0x40)
 271   1        {//P06 interrupt
 272   2          if(mGPIOIntHandler6)
 273   2          {
 274   3            mGPIOIntHandler6();
 275   3          }
 276   2        }
 277   1        
 278   1        PIF = 0;                             //clear interrupt flag
 279   1         
 280   1      }
 281          
 282          /*
 283          Extern 0 interrupt handler
 284          */
 285          void EXT_INT0(void) interrupt 0
 286          {
 287   1        if(mEX0IntHandler)
 288   1        {
 289   2          mEX0IntHandler();
 290   2        }
 291   1      }


C51 COMPILER V9.52.0.0   GPIO                                                              11/20/2017 10:39:42 PAGE 6   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    481    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
