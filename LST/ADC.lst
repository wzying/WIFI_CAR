C51 COMPILER V9.52.0.0   ADC                                                               11/20/2017 15:02:55 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Output\ADC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ADC.c OPTIMIZE(4,SPEED) BROWSE INCDIR(.\Code\Common;.\Code;.\Code\BSP;.\
                    -Code\N76E003_HW) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\ADC.lst) TABS(2) OBJECT(.\Output\ADC.obj)

line level    source

   1          
   2          #include "N76E003.h"
   3          #include "Common.h"
   4          #include "Delay.h"
   5          #include "Audio.h"
   6          #include "Board.h"
   7          #include "PWM.h"
   8          #include "motor.h"
   9          #include "SFR_Macro.h"
  10          #include "Function_define.h"
  11          #include "string.h"
  12          #include "UART.h"
  13          #include "LED.h"
  14          
  15          
  16          void Init_ADC(void)
  17          {
  18   1      //  //P0.4 AIN5  检测电机电流
  19   1      //  P04_Input_Mode;
  20   1      //  Enable_ADC_AIN5;
  21   1      //  
  22   1      //  //P0.5 AIN4  检测电池电压
  23   1      //  P05_Input_Mode;
  24   1      //  Enable_ADC_AIN4;  
  25   1      }
  26          
  27          u16 Get_ADC(void)
  28          {
  29   1        u16 adc;
  30   1        //u32 i=100;
  31   1        
  32   1        //P0.4 AIN5  检测电机电流
  33   1        Enable_ADC_AIN5;  
  34   1        
  35   1        clr_ADCF;
  36   1        set_ADCS;                 // ADC start trig signal
  37   1      
  38   1        while( ADCF == 0 );
  39   1      //  {
  40   1      //    if(i)
  41   1      //      i--;
  42   1      //    else
  43   1      //      return 0x0000;
  44   1      //    
  45   1      //    delay1ms();
  46   1      //  }
  47   1      
  48   1        adc = ADCRH*16 + ADCRL;
  49   1        
  50   1        return adc;
  51   1      }
  52          
  53          //获取电池电压
  54          u16 Get_ADC_BAT(void)
C51 COMPILER V9.52.0.0   ADC                                                               11/20/2017 15:02:55 PAGE 2   

  55          {
  56   1        u16 adc;  
  57   1        //u32 i=100;
  58   1        //P0.5 AIN4  检测电池电压
  59   1        Enable_ADC_AIN4;    
  60   1      
  61   1        clr_ADCF;
  62   1        set_ADCS;                 // ADC start trig signal
  63   1      
  64   1        while( ADCF == 0 );
  65   1      //  {
  66   1      //    if(i)
  67   1      //      i--;
  68   1      //    else
  69   1      //      return 0x0000;
  70   1      //    
  71   1      //    delay1ms();
  72   1      //  }
  73   1      
  74   1        adc = ADCRH*16 + ADCRL;
  75   1        
  76   1        return adc; 
  77   1      }
  78          u8 Get_ADC_BAT_8Bit(void)
  79          {
  80   1        u16 adc;  
  81   1        //u32 i=100;
  82   1        //P0.5 AIN4  检测电池电压
  83   1        Enable_ADC_AIN4;    
  84   1      
  85   1        clr_ADCF;
  86   1        set_ADCS;                 // ADC start trig signal
  87   1      
  88   1        while( ADCF == 0 );
  89   1      //  {
  90   1      //    if(i)
  91   1      //      i--;
  92   1      //    else
  93   1      //      return 0x0000;
  94   1      //    
  95   1      //    delay1ms();
  96   1      //  }
  97   1      
  98   1        adc = ADCRH*16 + ADCRL;
  99   1        
 100   1        return (u8)(adc>>4);  
 101   1      }
 102          
 103          
 104          u8 Get_ADC_BandGap(void)
 105          {
 106   1        u16 adc;  
 107   1        Enable_ADC_BandGap;
 108   1        
 109   1        clr_ADCF;
 110   1        set_ADCS;                 // ADC start trig signal
 111   1      
 112   1        while( ADCF == 0 ); 
 113   1      
 114   1        adc = ADCRH*16 + ADCRL;
 115   1        
 116   1        return (u8)(adc>>4);  
C51 COMPILER V9.52.0.0   ADC                                                               11/20/2017 15:02:55 PAGE 3   

 117   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    247    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
