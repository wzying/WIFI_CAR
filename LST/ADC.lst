C51 COMPILER V9.52.0.0   ADC                                                               09/28/2017 10:54:59 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Output\ADC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ADC.c OPTIMIZE(4,SPEED) BROWSE INCDIR(.\Code\Common;.\Code;.\Code\BSP;.\
                    -Code\N76E003_HW) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\ADC.lst) TABS(2) OBJECT(.\Output\ADC.obj)

line level    source

   1          
   2          #include "N76E003.h"
   3          #include "Common.h"
   4          #include "Delay.h"
   5          #include "Audio.h"
   6          #include "Board.h"
   7          #include "PWM.h"
   8          #include "motor.h"
   9          #include "SFR_Macro.h"
  10          #include "Function_define.h"
  11          #include "string.h"
  12          #include "UART.h"
  13          #include "LED.h"
  14          
  15          
  16          void Init_ADC(void)
  17          {
  18   1      //  //P0.4 AIN5  检测电机电流
  19   1      //  P04_Input_Mode;
  20   1      //  Enable_ADC_AIN5;
  21   1      //  
  22   1      //  //P0.5 AIN4  检测电池电压
  23   1      //  P05_Input_Mode;
  24   1      //  Enable_ADC_AIN4;  
  25   1      }
  26          
  27          u16 Get_ADC(void)
  28          {
  29   1        u16 adc;
  30   1      
  31   1        //P0.4 AIN5  检测电机电流
  32   1        Enable_ADC_AIN5;  
  33   1        
  34   1        clr_ADCF;
  35   1        set_ADCS;                 // ADC start trig signal
  36   1      
  37   1        while(ADCF == 0);
  38   1      
  39   1        adc = ADCRH*16 + ADCRL;
  40   1        
  41   1        return adc;
  42   1      }
  43          
  44          //获取电池电压
  45          u16 Get_ADC_BAT(void)
  46          {
  47   1        u16 adc;  
  48   1        
  49   1        //P0.5 AIN4  检测电池电压
  50   1        Enable_ADC_AIN4;    
  51   1      
  52   1        clr_ADCF;
  53   1        set_ADCS;                 // ADC start trig signal
  54   1      
C51 COMPILER V9.52.0.0   ADC                                                               09/28/2017 10:54:59 PAGE 2   

  55   1        while(ADCF == 0);
  56   1      
  57   1        adc = ADCRH*16 + ADCRL;
  58   1        
  59   1        return adc; 
  60   1      }
  61          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    121    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
