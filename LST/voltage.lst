C51 COMPILER V9.52.0.0   VOLTAGE                                                           11/22/2017 13:59:34 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE VOLTAGE
OBJECT MODULE PLACED IN .\Output\voltage.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Code\voltage.c OPTIMIZE(4,SPEED) BROWSE INCDIR(.\Code\Common;.\Code;.\Co
                    -de\BSP;.\Code\N76E003_HW) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\voltage.lst) TABS(2) OBJECT(.\Output\voltag
                    -e.obj)

line level    source

   1          
   2          #include "N76E003.h"
   3          #include "Common.h"
   4          #include "Delay.h"
   5          #include "Audio.h"
   6          #include "Board.h"
   7          #include "PWM.h"
   8          #include "motor.h"
   9          #include "SFR_Macro.h"
  10          #include "Function_define.h"
  11          #include "string.h"
  12          #include "UART.h"
  13          #include "ADC.h"
  14          #include "voltage.h"
  15          #include "GPIO.h"
  16          
  17          #define RES_H   20
  18          #define RES_L   12
  19          #define RES_RATIO   RES_L/(RES_L+RES_H)
  20          #define ADC_MAX     0xFF
  21          #define VOL_REF     355     //参考电压3.55V
  22          
  23          //电压采样标志
  24          u8 vol_sample=0;
  25          void Set_Vol_Sampling(void)
  26          {
  27   1        vol_sample = 1;//正在电压采样
  28   1      }
  29          void Reset_Vol_Sampling(void)
  30          {
  31   1        vol_sample = 0;
  32   1      }
  33          u8 Get_Vol_Sampling(void)
  34          {
  35   1        return vol_sample;
  36   1      }
  37          
  38          
  39          VOL_STATUS vol_Status = NORMAL;
  40          void Set_Vol_Status(VOL_STATUS s)
  41          {
  42   1        vol_Status = s;//欠压
  43   1      }
  44          VOL_STATUS Get_Vol_Status(void)
  45          {
  46   1        return vol_Status;
  47   1      }
  48          
  49          /*
  50            平均值
  51          */
  52          #define AVERAGE_N   1
  53          u8 Get_Vol_Average(void)
C51 COMPILER V9.52.0.0   VOLTAGE                                                           11/22/2017 13:59:34 PAGE 2   

  54          {
  55   1        u8 i=0;
  56   1        u16 sum=0;
  57   1        
  58   1        delay_adc();
  59   1        for(i=0;i<AVERAGE_N;i++)
  60   1        {
  61   2          sum += Get_ADC_BAT_8Bit();
  62   2          delay_adc();
  63   2        }
  64   1        
  65   1        return sum/AVERAGE_N;
  66   1      }
  67          
  68          /*
  69            根据ADC值计算电压值
  70            返回： 电池电压*100
  71          */
  72          u16 Get_Bat_Voltage(u8 adc)
  73          {
  74   1        return (u16)(adc*VOL_REF/(ADC_MAX*RES_RATIO));
  75   1      }
  76          
  77          void Send_Voltage(u8 v)
  78          {
  79   1        Send_Data_To_UART0(0x01);
  80   1        Send_Data_To_UART0(v);
  81   1      }
  82          
  83          /*
  84            电压监测
  85          */
  86          #define   UNDER_VOL_TH    0x80
  87          #define   HYSTERESIS_TH   5
  88          //默认是充电版4.8V 。AA版*5/4
  89          u8 bat_full = 0x6D;
  90          u8 bat_10   = 0x5E;
  91          u8 bat_20   = 0x64;
  92          /*
  93            设置阈值
  94          */
  95          #define BAT_AA_R 5/4
  96          void Set_Bat_TH(void)
  97          {
  98   1      //  if(GET_BAT_STATUS)//充电版4.8V
  99   1      //  {
 100   1      //    bat_full = 0x6D;//5.1V
 101   1      //    bat_10   = 0x5E;//3.7V
 102   1      //    bat_20   = 0x57;//4.0V  
 103   1      //  }
 104   1      //  else//AA版6V
 105   1      //  {
 106   1      //    bat_full = 0x83;//6.1V
 107   1      //    bat_10   = 0x70;//5.1V
 108   1      //    bat_20   = 0x7A;//5.6V  
 109   1      //  }
 110   1        if(GET_BAT_STATUS)//充电版4.8V
 111   1        {
 112   2      //    bat_full = 0x79;//5.1V
 113   2      //    bat_10   = 0x5A;//3.9V
 114   2      //    bat_20   = 0x60;//4.1V  
 115   2          bat_full = 0x74;//5.1V
C51 COMPILER V9.52.0.0   VOLTAGE                                                           11/22/2017 13:59:34 PAGE 3   

 116   2          bat_10   = 0x56;//3.9V
 117   2          bat_20   = 0x5C;//4.1V      
 118   2        }
 119   1        else//AA版6V
 120   1        {
 121   2          bat_full = 0x93;//6.1V
 122   2          bat_10   = 0x72;//4.8V
 123   2          bat_20   = 0x7F;//5.3V  
 124   2        } 
 125   1      }
 126          
 127          static u8 vol_Flag = 0xAF;
 128          static u8 vol_avr;
 129          static  u16 v_Gap;
 130          static  u8  v_R=0xFF;
 131          void Voltage_Monitor(void)
 132          { 
 133   1        static u16 i=0;
 134   1        
 135   1        if(i>=2500)
 136   1        {
 137   2          i=0;
 138   2          
 139   2          Set_Vol_Sampling();
 140   2          v_Gap = Get_ADC_BandGap();
 141   2          vol_avr = Get_Vol_Average();
 142   2          Reset_Vol_Sampling();
 143   2          
 144   2          if(vol_avr < 0xC5)//输入过高限制，以免溢出 . v_Gap 恒定= 0x5A
 145   2            v_R = (vol_avr*100)/v_Gap;
 146   2          else
 147   2            v_R = 0xFF;
 148   2          
 149   2          Send_Data_To_UART0(v_R);
 150   2          //Send_Data_To_UART0(vol_avr);
 151   2          
 152   2          if(v_R < bat_10)     //10% 
 153   2            vol_Flag = 0xA1;
 154   2          else if(v_R < bat_20)//20%   
 155   2          {
 156   3            if(vol_Flag!=0xA1)
 157   3              vol_Flag = 0xA2;
 158   3          }
 159   2          else if(v_R > bat_full)//电量充足  
 160   2            vol_Flag = 0xAF;
 161   2          
 162   2          Send_Voltage(vol_Flag);
 163   2        }
 164   1        else
 165   1        {
 166   2          i++;
 167   2        } 
 168   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    332    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     11       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       1
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.52.0.0   VOLTAGE                                                           11/22/2017 13:59:34 PAGE 4   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
