C51 COMPILER V9.52.0.0   MOTOR                                                             09/28/2017 10:54:58 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MOTOR
OBJECT MODULE PLACED IN .\Output\motor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Code\motor.c OPTIMIZE(4,SPEED) BROWSE INCDIR(.\Code\Common;.\Code;.\Code
                    -\BSP;.\Code\N76E003_HW) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\motor.lst) TABS(2) OBJECT(.\Output\motor.obj)

line level    source

   1          /***********************************************************************************
   2           Company  :   布塔科技
   3           File Name  : motor.c
   4           Author   : WANG 
   5           Create Data  :   2017-05-12
   6           Last Modified  : 2017-05-12
   7           Description  : 电机驱动函数  
   8           Version  :   1.0
   9          ************************************************************************************/
  10          #include "N76E003.h"
  11          #include "Common.h"
  12          #include "motor.h"
  13          #include "PWM.h"
  14          #include "SFR_Macro.h"
  15          /**************************************************
  16          *函数名： SetMotor_L
  17          *功能  ： 控制“左电机”的转速与方向
  18                    左电机 ： PWM1 + PWM4
  19          *参数  ：
  20                pwm：0-255  0->停止   255->最大速度
  21                direction：控制电机的正反转   0->正转   1->反转
  22          *返回  ： 无
  23          ***************************************************/
  24          void SetMotor_L(u8 pwm , u8 direction)
  25          {
  26   1        if(pwm!=0)
  27   1          pwm += MOTOR_PWM_DIF;
  28   1        
  29   1        if(direction)//??
  30   1        {
  31   2          SetPWM(1 , 0);
  32   2          SetPWM(4 , pwm);  
  33   2        }
  34   1        else//??
  35   1        {
  36   2          SetPWM(1 , pwm);
  37   2          SetPWM(4 , 0);
  38   2        }
  39   1      }
  40          
  41          /**************************************************
  42          *函数名： SetMotor_R
  43          *功能  ： 控制“右电机”的转速与方向
  44                    右电机 ： PWM3 + PWM0
  45          *参数  ：
  46                pwm：0-255  0->停止   255->最大速度
  47                direction：控制电机的正反转   0->正转   1->反转
  48          *返回  ： 无
  49          ***************************************************/
  50          void SetMotor_R(u8 pwm , u8 direction)
  51          {
  52   1        if(pwm!=0)
  53   1          pwm += MOTOR_PWM_DIF;
  54   1        
C51 COMPILER V9.52.0.0   MOTOR                                                             09/28/2017 10:54:58 PAGE 2   

  55   1        if(direction)//??
  56   1        {
  57   2          SetPWM(3 , pwm);
  58   2          SetPWM(0 , 0);
  59   2        }
  60   1        else//??
  61   1        {
  62   2          SetPWM(3 , 0);
  63   2          SetPWM(0 , pwm);
  64   2        }
  65   1      }
  66          
  67          /**************************************************
  68          *函数名： SetMotor_STOP
  69          *功能  ： 电机停止转动（不刹车）
  70          *参数  ： 无
  71          *返回  ： 无
  72          ***************************************************/
  73          void SetMotor_STOP(void)
  74          {
  75   1      //  clr_PWMRUN;
  76   1      
  77   1      //  P12=0;P11=0; P00=0;P01=0;
  78   1        
  79   1        SetPWM(1 , 0);
  80   1        SetPWM(4 , 0);
  81   1        SetPWM(3 , 0);
  82   1        SetPWM(0 , 0);
  83   1      }
  84          
  85          /**************************************************
  86          *函数名： SetMotor_Brake
  87          *功能  ： 刹车
  88          *参数  ： 无
  89          *返回  ： 无
  90          ***************************************************/
  91          void SetMotor_Brake(void)
  92          {
  93   1          SetPWM(1 , 0xff);
  94   1          SetPWM(4 , 0xff);
  95   1          SetPWM(3 , 0xff);
  96   1          SetPWM(0 , 0xff);
  97   1      }
  98          
  99          /* 机械臂 */
 100          static ARM_DIR arm_Dir_Tem;
 101          void SetArm( ARM_DIR dir)
 102          {
 103   1        arm_Dir_Tem = dir;
 104   1        switch(dir)
 105   1        {
 106   2        case ARM_UP:
 107   2          MOTOR_ARM_A = 1;
 108   2          MOTOR_ARM_B = 0;
 109   2          break;
 110   2        case ARM_DOWN:
 111   2          MOTOR_ARM_A = 0;
 112   2          MOTOR_ARM_B = 1;
 113   2          break;
 114   2        case ARM_STOP:
 115   2        default:
 116   2          MOTOR_ARM_A = 0;
C51 COMPILER V9.52.0.0   MOTOR                                                             09/28/2017 10:54:58 PAGE 3   

 117   2          MOTOR_ARM_B = 0;
 118   2          break;
 119   2        }
 120   1      }
 121          /*
 122            获取机械臂状态
 123          */
 124          ARM_DIR GetArmStatus(void)
 125          {
 126   1        return arm_Dir_Tem;
 127   1      }
 128          
 129          
 130          /* 前爪 */
 131          static CLAW_DIR claw_Dir_Tem;
 132          void SetClaw( CLAW_DIR dir )
 133          {
 134   1        claw_Dir_Tem = dir;
 135   1        switch(dir)
 136   1        {
 137   2        case CLAW_RELEASE:
 138   2          MOTOR_CLAW_A = 1;
 139   2          MOTOR_CLAW_B = 0;
 140   2          break;
 141   2        case CLAW_HOLD:
 142   2          MOTOR_CLAW_A = 0;
 143   2          MOTOR_CLAW_B = 1;
 144   2          break;
 145   2        case CLAW_STOP: 
 146   2        default:
 147   2          MOTOR_CLAW_A = 0;
 148   2          MOTOR_CLAW_B = 0;
 149   2          break;
 150   2        } 
 151   1      }
 152          CLAW_DIR GetClawStatus(void)
 153          {
 154   1        return claw_Dir_Tem;
 155   1      }
 156          
 157          
 158          /*
 159            左电机
 160            speed < 0 反转
 161            speed > 0 正转
 162          */
 163          void Control_Motor_L(s16 speed)
 164          {
 165   1        if(speed >= 0)
 166   1        {
 167   2          SetMotor_L(speed,0);
 168   2        }
 169   1        else
 170   1        {
 171   2          SetMotor_L(-speed,1);
 172   2        }
 173   1      }
 174          /*
 175            右电机
 176            speed < 0 反转
 177            speed > 0 正转
 178          */
C51 COMPILER V9.52.0.0   MOTOR                                                             09/28/2017 10:54:58 PAGE 4   

 179          void Control_Motor_R(s16 speed)
 180          {
 181   1        if(speed >= 0)
 182   1        {
 183   2          SetMotor_R(speed,0);
 184   2        }
 185   1        else
 186   1        {
 187   2          SetMotor_R(-speed,1);
 188   2        }
 189   1      }
 190          
 191          
 192          /*
 193            小车前后左右控制
 194            speed : 前后速度控制量
 195            dir   : 转向信号控制量
 196          */
 197          void Control_Motor(u8 speed,u8 dir)
 198          {
 199   1        s16 carSpeed_L=0,carSpeed_R=0;
 200   1        //u8 speed_dif;
 201   1        u8 flag=0;
 202   1        
 203   1          carSpeed_L = speed - 0x80;
 204   1          carSpeed_R = speed - 0x80;
 205   1      
 206   1          if( dir != 0x80 )
 207   1          {
 208   2            if( dir > 0x80 )//
 209   2            {
 210   3              carSpeed_L = 0;
 211   3              carSpeed_R = dir - 0x80;
 212   3            }
 213   2            if( dir < 0x80 )
 214   2            {
 215   3              carSpeed_R = 0;
 216   3              carSpeed_L = 0x80 - dir;
 217   3            }
 218   2            
 219   2      //      if( dir > 0x80 )//右转，右电机减速
 220   2      //      {
 221   2      //        speed_dif = dir-0x80;
 222   2      //        if(carSpeed_R>=0)
 223   2      //          carSpeed_R = carSpeed_R-speed_dif;
 224   2      //        else
 225   2      //          carSpeed_R = carSpeed_R+speed_dif;
 226   2      //      }
 227   2      //      else//左转，左电机减速
 228   2      //      {
 229   2      //        speed_dif = 0x80 - dir;
 230   2      //        if(carSpeed_L>=0)
 231   2      //          carSpeed_L = carSpeed_L-speed_dif;  
 232   2      //        else
 233   2      //          carSpeed_L = carSpeed_L+speed_dif;
 234   2      //      }
 235   2          } 
 236   1        
 237   1        Control_Motor_L(carSpeed_L);
 238   1        Control_Motor_R(carSpeed_R);
 239   1      }
 240          
C51 COMPILER V9.52.0.0   MOTOR                                                             09/28/2017 10:54:58 PAGE 5   

 241          /*
 242            接收超时检测
 243            超时则停车
 244          */
 245          #define TIMEOUT_MOTOR 700
 246          u16 timeOut_Motor=0;
 247          u8 CheckTimeOut_Motor(void)
 248          {
 249   1        if(timeOut_Motor)
 250   1          timeOut_Motor--;
 251   1        else
 252   1          return 1;
 253   1        
 254   1        return 0;
 255   1      }
 256          void Set_TimeOut_Motor(void)
 257          {
 258   1        timeOut_Motor = TIMEOUT_MOTOR;
 259   1      }
 260          
 261          /*
 262            WiFi信号接收超时
 263          */
 264          #define TIMEOUT_WIFI 1000
 265          u16 timeOut_Wifi=0;
 266          u8 CheckTimeOut_Wifi(void)
 267          {
 268   1        if(timeOut_Wifi)
 269   1          timeOut_Wifi--;
 270   1        else
 271   1          return 1;
 272   1        
 273   1        return 0;
 274   1      }
 275          void Set_TimeOut_Wifi(void)
 276          {
 277   1        timeOut_Wifi = TIMEOUT_WIFI;
 278   1      }
 279          
 280          
 281          /*
 282            机械臂控制
 283            参数： arm -> WiFi控制信号
 284          */
 285          void Control_ARM(u8 arm)
 286          {
 287   1        if( arm <= 0x40 )
 288   1        {
 289   2          SetArm( ARM_UP );
 290   2        }
 291   1        else if( arm >= 0xD0 )
 292   1        {
 293   2          SetArm( ARM_DOWN );
 294   2        }
 295   1        else
 296   1        {
 297   2          SetArm( ARM_STOP );
 298   2        }
 299   1      
 300   1      }
 301          /*
 302            前爪控制
C51 COMPILER V9.52.0.0   MOTOR                                                             09/28/2017 10:54:58 PAGE 6   

 303            
 304          */
 305          void Control_Claw(u8 claw)
 306          {
 307   1        if( claw <= 0x40 )
 308   1          SetClaw( CLAW_HOLD );
 309   1        else if( claw >= 0xC0 )
 310   1          SetClaw( CLAW_RELEASE );
 311   1        else
 312   1          SetClaw( CLAW_STOP );   
 313   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    493    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
